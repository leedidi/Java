/*====================================
  ■■■ 클래스와 인스턴스 ■■■
 =====================================*/

 // 직사각형 클래스 설계

 /*
 직사각형의 넓이와 둘레 계산, 클래스로 표현

 클래스의 정체성 → 직사각형
 클래스의 속성	 → 가로, 세로, (넓이, 둘레, 부피, 무게, 재질, 색깔, ....)		
 클래스의 기능	 → 넓이 계산, 둘레 계산, 가로세로 입력, 결과 출력

 
  객체를 구성     → 데이터(속성, 상태) + 기능(동작, 행위)
     ↓					   ↓				 ↓
 클래스를 설계	 →		  변수		   +   메소드


 class 직사각형		
 {

	 둘레 계산()
	 {
	 }

	 넓이 계산()
	 {
	 }
 }
 
*/
 
 import java.util.Scanner;

 class Rect		// 직사각형 클래스 설계
 {
	 // 데이터(속성, 상태) → 변수
	 int w, h;			//가로, 세로;

	 // 기능(동작, 행위)   → 메소드
	 void input() //가로세로 입력()
	 {
		 Scanner sc = new Scanner(System.in);

		 System.out.print("가로 입력 : ");
		 w = sc.nextInt();

		 System.out.print("세로 입력 : ");
		 h = sc.nextInt();

	 }

	 int calLength() // 둘레 계산 //@ 안넘겨줘도 됨! 시행착오 거치는게 중요. 답이 틀린게 지금은 중요한게 아님
	 							  //@ 얘를 부른곳에 둘레 주고옴. int
								  //@ tip) int result = 0; ~ return result; 로 쓰면 가운데 채워넣기만 하면 됨
								  // → (가로 + 세로) *2
	 {	
		 // 결과값으로 반환하게 될 변수 선언 및 초기화
		 int result = 0;
		 
		 // 선언한 변수에 값 채워넣기
		 // result → (가로 + 세로) *2
		 result = (w + h) *2;
		
		 // 최종 결과값 반환
		 return result;
	 }


	 int calArea()		//넓이 계산() → 가로 * 세로
	 {
		 int result = 0;

		 result = w * h;

		 return result;
	 }

	 void print(int a, int l)			//결과 출력() //@ 호출한 지점에 두고올필요가 없으니까 String x. 그냥 호출하는 거니까 void
										//@ 출력메소드! 굳이 연산 여기서 할 필요가...
										//@ cpu 딱 한가지 기능에 집중해서 이거만 빠르게! 그리고 조합해서 사용
										//@ 여기서는 result 가 보이지 X
	 {
		 // 가로 : 10
		 // 세로 : 20
		 // 넓이 : xxx
		 // 둘레 : xxx

		 System.out.println("가로 : " + w); //@ 가로, 세로 print가 팔에 닿는, 보이는 범위에 존재
		 System.out.println("세로 : " + h);
		 System.out.println("넓이 : " + a);	//@ 얘네 보이지 않음! 없는 경우에는 매개변수로 받아서 출력해줘야 함
		 System.out.println("둘레 : " + l);	//@ 내가 가지고있는건 받아서 출력해 줄게! 그치만 내가 가지고있지 않은 건 니가 매개변수로 줘 
		 									//@ 그럼 내가 출력해 줄게! 나는 출력만 하는 애니까(ex 출력실) 출력만 할거야! 
											//@ 출력할거 없어? 없으면 교수님께 받아오던지.. 어쨌든 줘!
	 }


 }
 
// ※ 하나의 자바 파일(.java)에 여러 개의 클래스(class)를 만들 수 있다.
//	  하지만, 『public class』는 하나만 올 수 있다.
//	  파일을 저장할 때의 이름은
//    이 『public class』의 이름으로 지정하여 저장해야 한다.
//	  일반적으로는 하나의 파일에 하나의 클래스를 설계한다.
//    또한, 여러 개의 클래스가 설계된 파일을 컴파일하게 되면
//	  내부에 설계된 클래스의 수 만큼 클래스 파일(.class)이 파생된다.

//@ 다수 클래스를 한파일에 만드는거도 가능. 
//  --> But public 붙는 클래스는 하나여야함!! 파일이름은 public 붙는 클래스의 이름이어야함!
//@ 실무에서는 보통 이렇게 쓰지 않음.

public class Test065
{
	public static void main(String[] args)
	{
		// Rect 클래스 인스턴스 생성
		//Rect ob; // @ Rect라는 타입으로 변수 ob를 쓸거야
		Rect ob = new Rect();	//@ new rect를 메모리에 퍼 올려주고, ob라는 변수로 사용할수 있게 해줘
								//@ 사실 퍼올려지는건 아닌데.. 지금은 퍼올려진다고 이해해도됨!
								//@ 퍼올려지는 주소값 알수도, 알 필요도 없다!
		
		// 생성된 인스턴스 ob를 활용하여 입력 메소드 호출
		ob.input();
		
		// 생성된 인스턴스 ob를 통해 넓이 연산 메소드 호출
		// → 메소드 호출로 얻어낸 값을 담아낼 준비
		int area = ob.calArea();	

		// 생성된 인스턴스 ob 를 통해 둘레 연산 메소드 호출
		// → 메소드 호출로 얻어낸 값을 담아낼 준비
		int length = ob.calLength();

		// 생성된 인스턴스 ob 를 통해 출력 메소드 호출
		ob.print(area, length);
		

	
	}
}

// 실행 결과
/*
가로 입력 : 10
세로 입력 : 20
가로 : 10
세로 : 20
넓이 : 200
둘레 : 60
계속하려면 아무 키나 누르십시오 . . .
*/