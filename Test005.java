/*====================================
  ■■■ 자바의 개요 및 특징 ■■■
  -변수와 자료형
  -키워드 및 식별자
  -printf()
=====================================*/

public class Test005
{
	public static void main(String[] args)
	{
		// 변수 선언 및 초기화(메모리에 값 할당)
		//int a=10, int b=5; (@이렇게 선언X)
		int a =10, b=5;

		// 변수 선언
		//int c, int d; (@이렇게 선언X)
		int c, d;

		// 연산 및 처리
		c = a + b;	//-- a + b의 결과값을 변수 c에 대입해라.
		d = a - b;	//-- a - b의 결과값을 변수 d에 대입하라.

		//결과 출력 -> 『10 + 5 = 15』 의 형태...
		//System.out.println(a + b = c); (@이런 형태X, c를 b에 대입하고 a와 더해라)
		System.out.println(a + " + " + b + " = " + c);
		//--==>> 10 + 5 = 15
		//				  숫자 문자열숫자 문자열 숫자
		//-- 자바에서는 서로 다른 자료형의 데이터들끼리도
		//  『+』 연산이 가능하며
		// 다른 어떤 자료형과 문자열 데이터의 『+』 연산 결과는 문자열.
		// 즉, 문자열 결합 연산자로써 『+』

		// print() / println() / printf() / format()
		
		// printf() / format()
		//-- JDK 1.5 부터 지원되는 메소드
		//@실무 나갔는데 JDK 1.4다? 그럼 사용 못함. printf() = format(), 근데 printf 더 많이 씀. printf는 개행 없음
		//System.out.printf("○ + ○ = ○", 10, 20, 30);
		System.out.printf("%d + %d = %d\n", 10, 20, 30);	//  『\n』 개행
		System.out.printf("%d + %d = %d%n", 10, 20, 30);	//  『%n』 개행
	
		System.out.printf("%d와 %f%n", 10, 3.141592);	//@ %d: 정수를 담는 옵션문자, %f: 실수를 담는 옵션문자
		//--==>> 10 와 3.141592
		System.out.printf("%d와 %.2f%n", 10, 3.141592);
		//-- 소수점 이하 두 번째 자리까지 표현
		//--==>> 10 와 3.14 (@3번째자리 짤라서 버리는게 아님, 반올림 한 것)
		
		System.out.printf("%d와 %.4f%n", 10, 3.141592);
		//-- 소수점 이하 네 번째 자리까지 표현(반올림 발생)
		//--==>> 10 와 3.1416
		


	}
}

//실행 결과
/*
10 + 5 = 15
10 + 20 = 30
10 + 20 = 30
10와 3.141592
10와 3.14
10와 3.1416
계속하려면 아무 키나 누르십시오 . . .
*/