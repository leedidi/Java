/*==========================================================
  ■■■ 실행 흐름의 컨트롤(제어문, 조건문과 반복문) ■■■
  - continue
  	(뒷부분 무시하고 +) 계속해라.
 ==========================================================*/

// 다음과 같이 출력될 수 있도록 프로그램을 구현한다.
// 즉, 1 부터 100 까지의 수 중에서
// 홀수들의 합만 연산하고 그에 대한 결과를 출력하는 구문을 구성한다.
// ------
// (짝수 제외)
// 단, continue 를 활용한다.

/*
1 : 1
3 : 4
5 : 9
7 : 16
 ：
99 : 2500
*/

public class Test061
{
	public static void main(String[] args)
	{

	/*
	[내가 만든 코드]

	// 주요 변수 선언 및 초기화
	int n=1;		// 1 ~ 99까지의 홀수
	//int i=1;		// 1부터 n까지의 홀수의 합 구하는 데 사용할 루프 변수 > 필요 없음!
	int oddsum=0;	// 1부터 n까지의 홀수의 합 

	// 연산 및 처리
	
	// while 문 사용 > 1~100까지
	// continue( (뒷부분 무시하고 +) 계속해라.. 사용 필요)
	for (n=1;n<=99;n+=2)
	{
		oddsum += n;
		System.out.printf("%d : %d\n", n, oddsum);
	}
	*/

	//[함께 만든 코드]
	int n = 0, s = 0;
	
	while(n<100)
		{
		n++;

		//테스트
		//System.out.println("n : " + n);
		
		if(n%2 == 0) // n이 짝수라면...
		{
			continue;
			// -- ( 뒷 부분 무시하고...) + 계속해라 
			// @ 뒷 부분 무시하고 처음 while로 돌아감!
		}
													//-- 뒷 부분
		// 누적합 연산								//-- 뒷 부분
		s += n;										//-- 뒷 부분
		// 출력										//-- 뒷 부분
		System.out.println(n + " : " + s);			//-- 뒷 부분
		}



	
	// 결과 출력

	}
}

/*
1 : 1
3 : 4
5 : 9
7 : 16
9 : 25
11 : 36
13 : 49
15 : 64
17 : 81
19 : 100
21 : 121
23 : 144
25 : 169
27 : 196
29 : 225
31 : 256
33 : 289
35 : 324
37 : 361
39 : 400
41 : 441
43 : 484
45 : 529
47 : 576
49 : 625
51 : 676
53 : 729
55 : 784
57 : 841
59 : 900
61 : 961
63 : 1024
65 : 1089
67 : 1156
69 : 1225
71 : 1296
73 : 1369
75 : 1444
77 : 1521
79 : 1600
81 : 1681
83 : 1764
85 : 1849
87 : 1936
89 : 2025
91 : 2116
93 : 2209
95 : 2304
97 : 2401
99 : 2500
계속하려면 아무 키나 누르십시오 . . .
*/