/*==================================
   ■■■ 클래스와 인스턴스 ■■■
   - 생성자(Constructor)
 ===================================*/

public class Test071
{
	int x;
	
	// ※ 생성자의 이름은 항상 예외없이 클래스의 이름과 동일해야 하며
	//	  필요할 경우 인수를 받아들이는 것도 가능하고,
	//	  같은 이름의 메소드를 정의하는 중복정의가 가능하지만
	//	  리턴값(반환값)은 가질 수 없다.

	// ※ 생성자는 다른 일반 메소드처럼 호출될 수 없고,
	//    『new』 연산자를 이용하여 객체를 생성하기 위해 호출되며,
	//    각 클래스의 인스턴스인 객체를 생성한 후에
	//    생성된 객체의 멤버를 초기화시키는 작없을 수행한다.

	
	// @ 이렇게 둘다 쓰는거 가능! 메소드 오버로딩

	Test071()
	{	
		// ※ 생성자 내부에서 다른 생성자를 호출하는 것은 가능하다.
		//    하지만, 생성자 내부에서 가장 먼저 실행되어야 한다.

		//@ 생성자에서 또다른 생성자 호출 가능. 생성자 내부에서 가장먼저 실행되어야 함
		//Test071(1000); //@이렇게 쓰면 안됨
		//@ 호출가능 왜? 따로 20줄 쓸거 호출로 간단하게 할수 있으므로....
		//@ 가장먼저 실행 왜? 우선순위를 당사자에게 주기 위해서! 뒤에서 덮어쓰게 하지 x 위해서
		

		//생성자 호출
		//Test071(); //@ --(x) 요렇게 쓸수 없음
		this(1000);

		//this.x = 10;		//
		x = 10;				//@ 위아래 둘다 같음.

		System.out.println("인자가 없는 생성자");
		//System.out.println("Test071이 갖고있는 x : " + this.x);	//
		System.out.println("Test071이 갖고있는 x : " + x);			//@ 위아래 둘다 같음. 이위치에서 보이는 x는 이 x 하나뿐이니까!
																	//@ 원래는 this 쓰지만 생략가능. 우리반에 수지가 하나인데 굳이 
																	//@ 계속 우리반 수지, 할 필요 없음!

	}
	
	Test071(int x)
	{	

		//this();  //@ --(o)

		// x = x; //@ 매개변수 넘겨받은 거로 담겠다. 지역변수 안에서의 x. x자체를 초기화하는게 XX
		// 맨위 Test071의 x = x; //@이거 누가 먼저 선점해버림
		this.x = x;

		//@<this 써야할 때!>
		// --> Test071.x 처럼 직접적으로 써야할 때
		// - this 나오면 this 포함하는 클래스 찾기. ex> 클래스 이름: Test071 -> Test071.x
		//  이렇게 치환해서 생각하기.

		System.out.println("인자가 하나인 생성자");
		System.out.println("Test071이 갖고있는 x : " + this.x);

		//Test071(); //@ --(x)
	}


	public static void main(String[] args)
	{
		// Test071 클래스 기반 인스턴스 생성
		Test071 ob1 = new Test071();
		Test071 ob2 = new Test071(100);
		//--==>>
		/*
		인자가 없는 생성자
		Test071이 갖고있는 x : 10
		인자가 하나인 생성자
		Test071이 갖고있는 x : 100
		계속하려면 아무 키나 누르십시오 . . .
		*/

		// System.out.println("ob2.x : " + ob2.x); // 0 
		//    System.out.println("ob2.x : " + ob2.x); // 100

		System.out.println();
		System.out.println("main 에서 ob1.x : " + ob1.x);
		System.out.println("main 에서 ob2.x : " + ob2.x);
	}
}

// 실행 결과
/*
인자가 하나인 생성자
Test071이 갖고있는 x : 1000
인자가 없는 생성자
Test071이 갖고있는 x : 10
인자가 하나인 생성자
Test071이 갖고있는 x : 100

main 에서 ob1.x : 10
main 에서 ob2.x : 100
계속하려면 아무 키나 누르십시오 . . .
*/