/*===================================
  ■■■ 연산자(Operator) ■■■
  - 비트 단위 연산자
 ===================================*/

// 비트 단위 연산자 『xor』(^)연산자를 활용하여
// 두 변수에 담겨있는 내용(값) 바꾸기

public class Test024
{
	public static void main(String[] args)
	{
		// 주요 변수 선언
		int x = 20, y = 23;

		// 담긴 내용물 확인
		System.out.printf("x→%d, y→%d\n", x, y);
		
		/*
		// 추가 변수 선언
		int temp;

		// 연산 및 처리
		temp = x;
		x = y;
		y = temp;
		*/

		x = x^y;	// y = y^x;
		y = y^x;	// x = x^y;
		x = x^y;	// y = y^x;
		
		//@ 1번째 줄, 마지막 줄은 같음
		//@ 속도 빠르고, 추가 연산자 필요 없음
	
		// 결과 출력
		System.out.printf("x→%d, y→%d\n", x, y);
	}
}


//실행 결과
/*
x→20, y→23
x→23, y→20
계속하려면 아무 키나 누르십시오 . . .
*/


/*
 ^: 서로 다른 비트열만 1
x → 20, y → 23
1> x = x^y;	
2> y = y^x;	
3> x = x^y;

1>
x = x^y;
x = 20^23;		00010100 → 20
			  ^	00010111 → 23
			  ------------------
			    00000011 → 3
X=3;

2>
y = y^x;
y = 23^3;		00010111 → 23
			 ^	00000011 → 3
			 -------------------
				00010100 → 20	
y=20;

3> 
x = x^y;
x = 3^20;		00000011 → 3
              ^ 00010100 → 20
			  -----------------
			    00010111 → 23

x=23;
*/