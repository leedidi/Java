
// (여기 수업 후 지우심.. 나중에 다시 보게될거)
// (지금은 가볍게 참고만 하자)

// w는 누나 통금 O
// getw는 동생.. 밖에있는 사람들과 만나게 해줌
// getW.동생이 외부있는 사람에게 누나가 이거하고있어요 알려줌
// setW. 이거 누나한테 전달해줘....! 그래서 전달해줌


	class Rect
	{
	private int w,h; // 첫째누나, 둘째누나 탑에 갖혀있음 통금 ○

	// getter 셋째남동생 - 누나가 어떤 상태인지 알려주는 메신저 (아래 : 값을 받아옴)
	public int getW()
	{	if(this.w!=0)
		{
			return w;
		}
		else
		{
			return w;
		}
	}

	// setter 넷째남동생 - 누나에게 전달해주는 물건 메신저 (아래 : 값을 받아옴)
	public void setW(int w)
	{	
		if(w>100)
		{
			return;
		}
		else
		{
			this.w = w;
		}
	}


	// 누나와 직접 접촉은 X, 동생에게 메세지를 전달해주게 함!!!
	// 굳이 왜이렇게 복잡하게? 
	// -> 셋째, 넷째 아들만 교육시키면 누나들에게 해가 되는 값을 전달 안하게, 안좋은 누나들 상태를 전달 안하게 제어 가능!
	// 첫째 누나한테 불량식품 가져다주면 안 된다~!
	// 규칙 뚫어놓을 테니까 이 안에서 주거니 받거니 하자.
	}

public class Test094
{
	public static void main(String[] args)
	{
		Rect ob = new Rect();

		//ob.w = 1000;
		//ob.w -= 20000;
		//System.out.println("설탕의 양 확인 : " + ob.w);

		ob.setW(50);
		System.out.println("설탕의 양 확인 : " + ob.getW());
		
	}
}

// [QnA]
// 클래스에 직접 선언되어 있는 변수들을 멤버라고 함. 메소드를 멤버라고 하진 않는듯?
// 클래스 안에 소속되어 있는 식구들

// void는 리턴하지 않는거!
// 자료형 : 그릇. 그릇에 담는거/ 꺼내는건 통일되는게 읽기 쉬우니까.. 문법이라기보단 개발자들 사이의 약속