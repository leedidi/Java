/*========================================
   ■■■ 정렬(Sort) 알고리즘 ■■■
   - 버블 정렬(Bubble Sort)
 =========================================*/

/*
○ 정렬
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게... 검색하기 위함

○ 정렬의 종류
   : 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬....
*/

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62
// 계속하려면 아무 키나 누르세요...

public class Test104
{
	public static void main(String[] args)
	{
		/*
		42 52 12 62 60			0	1			기준 0 1 2 3
		== --
		42 12 52 62 60			1	2
		   == --
		42 12 52 62 60			2	3
		      == --
		42 12 52 60 62			3	4
		         == --
		--------------------------------------- 1회전   (==: 기준)

		12 42 52 60 62			0   1           기준 0 1 2
		== --
		12 42 52 60 62			1   2
		   == --
		12 42 52 60 62			2   3
		      == --
		--------------------------------------- 2회전

		12 42 52 60 62			0   1			기준 0 1
	    == --
		12 42 52 60 62			1   2
	       == --
		--------------------------------------- 3회전

		12 42 52 60 62			0   1			기준 0 
	    == --
		--------------------------------------- 4회전

			
		//@ 버블 소트 특징
		//@ 1. 인접해 나간 것끼리 비교해 나감
		//@ 2. 가장 큰 수가 가장 오른쪽에서 자리를 잡음(그러니까 다음 회수에선 맨 오른쪽거 건드리지 Ⅹ)

		*/
		
		int[] a = {52, 42, 12, 62, 60};
		int i,j;

		System.out.print("Sorced data : ");
		for(int n : a)
			System.out.print(n + " ");
		System.out.println();


		//[내가 작성한 코드]
		/*
		for (i=0; i<a.length; i++)
		{
			for (j=i+1; j<a.length; j++)
			{	
				i++;
				if (a[i]>a[j])
				{
					a[i] = a[j]^a[i];
					a[j] = a[i]^a[j];
					a[i] = a[j]^a[i];
				}
				
			}
		}
		*/

		//[함께 작성한 코드]
		// Bubble Sort
		for (i=1; i<a.length; i++)	// 뒤에서 비교 대상을 하나씩 줄여주는 역할
		{	
			// 테스트
			//System.out.print(i + " "); // 1 2 3 4

			for (j=0; j<a.length-i; j++)
			{
				if (a[j] > a[j+1])
				{
					a[j] = a[j]^a[j+1];
					a[j+1] = a[j+1]^a[j];	
					a[j] = a[j]^a[j+1];
				}
			}
		}

		System.out.print("Sorted data : ");
		for (int n : a)
			System.out.print(n + " ");
		System.out.println();
		

	}
}

// 실행 결과
/*
Sorced data : 52 42 12 62 60
Sorted data : 12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/