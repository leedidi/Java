
 ■ 접근제어 지시자의 관계

   지시자   /   클래스 내부   /  동일 패키지   /  상속받은 클래스   / 이외의 영역
 -----------------------------------------------------------------------------------
  private    |      ○       |        ×      |          ×        |        ×
  default    |      ○       |        ○      |          ×        |        ×
  protected  |      ○       |        ○      |          ○        |        ×
  public     |      ○       |        ○      |          ○        |        ○


 - private : 자판기 내부에서만 접근 가능, 자판기 외부에서는 접근 불가능함

 - defalt/ protected 둘이 좀 헷깔림
 (어감상 프로텍티드가 더 보안성있는거 같지만 디폴트가 더 보안성 있음)
   > defalt: 접근제어 지시자가 없는 것!
// @ 둘다 내부 허용 ○, 이외의 영역에서는 허용하지X, 동일패키지 허용 ○
// @ 상속받은 클래스 : 상속 > 부모가 자산에게 자산 물려주는 것
// - 집에 거실.. 안방.. 안방에 액자.. 액자 테두리가 금색이고 액자에는 아버님의 초상화..
     액자 뒤에는 금고 ... 나는 금고 있다는걸 암... 하지만 부모님은 금고대해 나에게 한마디도 안하심..
     나는 금고에 접근하지(열지) 못함. 어느날 금고에 대해 부모님이 얘기해주심... 너에게도 이제는 얘기해      줄 때가 왔으니 얘기해줄게. 우리가 이걸 프로텍티드 해야 한다.

     > 아무 말이 없는 상태 : defalt -> 상속받은 클래스에 자식은 접근 X
     > 부모가 자식을 앉혀놓고 우리 프로텍트 해야해! : protected -> 상속받은 클래스에 접근할수 ○

 - public : 공용
 
※ public > protected > default > private